env:
  FASTAPI_DB_USER: postgres
  FASTAPI_DB_PASSWORD: postgres
  POSTGRES_DB: postgres

name: CI/CD
on: [push]

jobs:

  code-quality:
    name: Check coding standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: poetry

      - name: Install Python dependencies
        run: poetry install

      - name: Run all linters
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all


  test:
    name: Run tests
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: pytest Check
        run: make pytest
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

#jobs:
#  lint:
#    name: Code style checks
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: checkout submodule
#        run: |
#          git submodule init
#          git submodule update
#
#      - name: Install python requirements
#        uses: .github/actions/python-requirements
#
#      - name: Run all linters
#        uses: pre-commit/action@v3.0.0
#        with:
#          extra_args: --all
#
#  test:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:13.4-alpine
#        env:
#          POSTGRES_USER: ${{ env.FASTAPI_DB_USER }}
#          POSTGRES_DB: ${{ env.POSTGRES_DB }}
#          POSTGRES_PASSWORD:  ${{ env.FASTAPI_DB_PASSWORD }}
#        ports: ["5432:5432"]
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Install python requirements
#        uses: .github/actions/python-requirements
#
#      - name: Running alembic version upgrade
#        run: |
#          make migrations
#
#      - name: pytest Check
#        run: make pytest
#        env:
#          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
